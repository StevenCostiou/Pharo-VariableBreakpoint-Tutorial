# Variable breakpoints: warmup## SummaryIn this tutorial, you will learn to use the Pharo variable breakpoints. **What is a variable breakpoint?**A variable breakpoint interrupts an execution whenever a target variable is read or written.The breakpoint then opens a debugger on that variable access to let you inspect the state of your program.We can target the instance variables of a class or a temporary variable in a method.We can configure the breakpoint to trigger only for variable reads, for variable writes, or for both.**When to use variable breakpoints?***TODO***What is in this tutorial?**In the following, we will learn how to configure variable breakpoints and to use them in an example. ## Typical usecase: breaking when an instance variable is written toWe will use the example class `VBTExamplePerson` (click on it to open) which represent a person.Instances of this class have a name and an age. Both are instance variables.Let us imagine that we want to interrupt the execution when someone modifies the age of a person.**Installing the variable breakpoint**The first step is to select the ```age``` instance variable of our class and to configure a *break on write* breakpoint.Let's open a class browser by clicking on `VBTExamplePerson`.There, we will apply the following steps, as depicted in the image below:1. select the `VBTExamplePerson` class2. select the variable (`vars`) view3. select the ```age``` variable in the variable list4. right click on that variable and in the menu selec *Break on write*![nst-var-break-on-write](https://github.com/StevenCostiou/Pharo-VariableBreakpoint-Tutorial/raw/main/pictures/inst-var-break-on-write.png)Once we performed these steps, the breakpoint is installed on the variable.All methods writing the ```age``` variable now have a red icon signifying that a breakpoint is installed on the variable write:![break-on-write-view](https://github.com/StevenCostiou/Pharo-VariableBreakpoint-Tutorial/raw/main/pictures/installed-breakpoint-view.png)**Creating a person object and modifying its age**We will  now create an instance of `VBTExamplePerson`  and modify the age of that person object.Open a playground using the Pharo top menu: *Browse -> Playground*.Copy/paste the following code, then click *Do It* in the toolbar.```VBTExamplePerson new age: 15```We observe that a debugger opens when the executions tries to write the given age (15) into the ```age``` instance  variable of the person.Using this breakpoint, we can monitor and debug at the moment where an instance variable is modified.**Removing the breakpoint (shortcut)**Removing a variable breakpoint is straightforward, and similar to removing standard breakpoints.Just select a method in which the target variable is accessed. Here, we select the ```age:``` method where the ```age``` instance variable is modified.In the gutter, facing the instruction where the variable is modified, move your mouse over the red bubble and the breakpoint appears (like in the picture below).Click on that breakpoint to uninstall it.The breakpoint will automatically uninstall from all methods in which it was installed, *i.e.*, all methods in which the ```age``` instance variable is accessed in write mode.![remove-breakpoint-shortcut](https://github.com/StevenCostiou/Pharo-VariableBreakpoint-Tutorial/raw/main/pictures/removing-breakpoint-shortuct.png)## Breaking when any instance variable of a class is accessedIn this scenario, we are interested in interrupting the execution when any instance variable defined in a target class is read or written.Basically, we want to open a debugger whenever the state of the instances of that target class are accessed.We do that in two steps, as illustrated in the example from the picture below:1. we browse the  `VBTExamplePerson` class2. we do a right click, and in the menu we select *Break on all variable accesses*![class-break-on-all-inst-var-accesses](https://github.com/StevenCostiou/Pharo-VariableBreakpoint-Tutorial/raw/main/pictures/class-break-on-all-inst-var-accesses.png)Let us  now create an instance of `VBTExamplePerson`  and execute a method accessing multiple instance variables of that instance.Open a playground using the Pharo top menu: *Browse -> Playground*.Copy/paste the following code, then click *Do It* in the toolbar.```VBTExamplePerson new name: 'Jeanne'; age: 15; printPerson```## Breaking when a temporary variable of a method is written![temp-var-break-on-write](https://github.com/StevenCostiou/Pharo-VariableBreakpoint-Tutorial/raw/main/pictures/temp-var-break-on-write.png)```VBTExamplePerson new age: 15```## Exploring and managing breakpoints